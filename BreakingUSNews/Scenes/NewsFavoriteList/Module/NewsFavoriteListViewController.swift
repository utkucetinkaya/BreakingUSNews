//
//  NewsFavoriteListViewController.swift
//  BreakingUSNews
//
//  Created by Utku Ã‡etinkaya on 23.11.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewsFavoriteListDisplayLogic: AnyObject {
    
    func displayFavoriteNews(viewModel: FavoriteNews.Fetch.ViewModel)
}
                                            
class NewsFavoriteListViewController: UIViewController {
    
    var viewModel: FavoriteNews.Fetch.ViewModel?
    var interactor: GetFavoriteListInteracting?
    var router: (NewsFavoriteListRoutingLogic & NewsFavoriteListDataPassing)?
    
    @IBOutlet weak var favoriteTableView: UITableView!
    
    // MARK: - Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
{
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: - Setup
  
  private func setup() {
    let viewController = self
    let interactor = NewsFavoriteListInteractor(worker: NewsFavoriteListWorker())
    let presenter = NewsFavoriteListPresenter()
    let router = NewsFavoriteListRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }

  // MARK: - View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()

      interactor?.fetchFavorites(request: FavoriteNews.Fetch.Request.init())
      setupFavoriteTableView()
      self.title = "Favorites"
  }
    
    @IBAction func didTapRouteToNewsList(_ sender: Any) {
        router?.routeToNewsList()
    }
}

extension NewsFavoriteListViewController: NewsFavoriteListDisplayLogic {
    
    func displayFavoriteNews(viewModel: FavoriteNews.Fetch.ViewModel) {
        self.viewModel = viewModel
        favoriteTableView.reloadData()
    }
}
