//
//  FavoriteDetailViewController.swift
//  BreakingUSNews
//
//  Created by Utku Ã‡etinkaya on 15.12.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SDWebImage

protocol FavoriteDetailDisplayLogic: AnyObject {
  func displayNews(viewModel: FavoriteDetail.Fetch.ViewModel)
}

class FavoriteDetailViewController: UIViewController {
    
    // MARK: - IBOutlets
    @IBOutlet weak var backView: UIView!
    @IBOutlet weak var contentLabel: UILabel!
    @IBOutlet weak var descLabel: UILabel!
    @IBOutlet weak var titleLabel: UILabel!
    @IBOutlet weak var imageDetail: UIImageView!
    @IBOutlet weak var sourceNameLabel: UILabel!
    
    // MARK: - Variables
    
    var interactor: FavoriteDetailBusinessLogic?
    var router: (FavoriteDetailRoutingLogic & FavoriteDetailDataPassing)?
    var viewModel: FavoriteDetail.Fetch.ViewModel?

  // MARK: - Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: - Setup
  
  private func setup() {
    let viewController = self
    let interactor = FavoriteDetailInteractor(worker: FavoriteDetailWorker())
    let presenter = FavoriteDetailPresenter()
    let router = FavoriteDetailRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  

  // MARK: - View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
      interactor?.fetchFavorites()
  }
  
    @IBAction func didTapWebKit(_ sender: Any) {
        router?.routeToWebKit()
    }
}

extension FavoriteDetailViewController: FavoriteDetailDisplayLogic {
    
   func displayNews(viewModel: FavoriteDetail.Fetch.ViewModel) {
       self.viewModel = viewModel
       descLabel.text = viewModel.description
       contentLabel.text = viewModel.content
       titleLabel.text = viewModel.title
       sourceNameLabel.text = viewModel.name
       
       if let image = viewModel.urlToImage {
           imageDetail.sd_setImage(with: URL(string: image))
       } else {
           let defaultImage = UIImage(named: "default_news")
           imageDetail.image = defaultImage
       }
   }
}
