//
//  NewsDetailViewController.swift
//  BreakingUSNews
//
//  Created by Utku Ã‡etinkaya on 17.11.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SDWebImage

protocol NewsDetailsDisplayLogic: AnyObject {
  func displayNews(viewModel: NewsDetail.Fetch.ViewModel)
}

class NewsDetailViewController: UIViewController {
    
    
    // MARK: - IBOutlets
    @IBOutlet weak var backView: UIView!
    @IBOutlet weak var contentLabel: UILabel!
    @IBOutlet weak var descLabel: UILabel!
    @IBOutlet weak var titleLabel: UILabel!
    @IBOutlet weak var imageDetail: UIImageView!
    @IBOutlet weak var sourceNameLabel: UILabel!
    
    // MARK: - Variables
    
    var articles: Article?
    var favorites: FavoriteNews.Fetch.ViewModel.Favorites?
    var interactor: NewsDetailBusinessLogic?
    var router: (NewsDetailRoutingLogic & NewsDetailDataPassing)?
    var viewModel: NewsDetail.Fetch.ViewModel?
    var isComingFav = false
    
    // MARK: - Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: - Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = NewsDetailInteractor(worker: NewsDetailWorker())
        let presenter = NewsDetailPresenter()
        let router = NewsDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        if isComingFav == true {
            self.favorites = router?.dataStore?.favorites
            self.setFavoriteDetail()
        } else {
            interactor?.fetchNews()
        }
    }
    
    @IBAction func webKitButtonClicked(_ sender: Any) {
        guard let url = URL(string: viewModel?.url ?? "") else {
            return
        }
        let vc = WebViewController()
        vc.webView.load(URLRequest(url: url))
        navigationController?.pushViewController(vc, animated: true)
    }
    
    @IBAction func didTapFavoriteListButton(_ sender: UIButton) {
        router?.routeToFavoriteNews()
        
    }
    
    func setFavoriteDetail() {
        sourceNameLabel?.text = self.favorites?.name
        titleLabel.text = self.favorites?.title
        descLabel.text = self.favorites?.description
        contentLabel.text = self.favorites?.content
        //
        if let image = favorites?.urlToImage {
            let urlString = image.addingPercentEncoding(withAllowedCharacters: .urlQueryAllowed)
            self.imageDetail.sd_setImage(with: URL(string: urlString ?? ""))
        } else {
            let defaultImage = UIImage(named: "us.news")
            imageDetail.image = defaultImage
            
        }
    }
}
    
    extension NewsDetailViewController: NewsDetailsDisplayLogic {
        func displayNews(viewModel: NewsDetail.Fetch.ViewModel) {
            self.viewModel = viewModel
            descLabel.text = viewModel.description
            contentLabel.text = viewModel.content
            titleLabel.text = viewModel.title
            sourceNameLabel?.text = viewModel.name ?? ""
            
            if let image = viewModel.urlToImage {
                imageDetail.sd_setImage(with: URL(string: image ))

            } else {
                let defaultImage = UIImage(named: "us.news")
                imageDetail.image = defaultImage
            }
        }
    }


